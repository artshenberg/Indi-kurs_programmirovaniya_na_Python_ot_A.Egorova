"""
Сортировка слиянием (merge sort)

Есть несколько типов сортировки, которые используют рекурсию. Одна из них называется сортировка слиянием

Ваша задача реализовать этот алгоритм. Для этого нужно будет создать функцию merge_sort, которая будет принимать
исходный список и возвращать новый отсортированный в порядке неубывания список.

Также для реализации функции merge_sort вам понадобится реализовать функцию merge_two_list. Функция merge_two_list
должна принимать два отсортиванных по неубыванию списка, сливать их в один большой список также отсортированный
по неубыванию (задача Слияние списков ) и возвращать его.

Ваша задача написать только определение функций merge_sort и merge_two_list, при этом нельзя пользоваться встроенными
сортировками в Python

Sample Input:

7
6 2 19 5 10 7 11
Sample Output:

2 5 6 7 10 11 19
"""


# функция merge_two_list должна объединить два списка
def merge_two_list(a: list, b: list) -> list:
    """Принимает два отсортированных по не убыванию списка, сливает их в один большой список также отсортированный
по не убыванию и возвращает его."""
    result = []
    i = j = 0

    while i < len(a) and j < len(b):
        if a[i] < b[j]:
            result.append(a[i])
            i += 1
        else:
            result.append(b[j])
            j += 1

    result.extend(a[i:])
    result.extend(b[j:])

    return result


# функция merge_sort должна выполнить сортировку
def merge_sort(s: list) -> list:
    """Сортирует массив, используя рекурсивную сортировку слиянием."""
    if len(s) == 1:
        return s

    middle = len(s) // 2
    left = merge_sort(s[:middle])
    right = merge_sort(s[middle:])
    return merge_two_list(left, right)


n = int(input())
print(*merge_sort(list(map(int, input().split()))))
