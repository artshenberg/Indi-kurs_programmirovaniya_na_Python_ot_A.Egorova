"""
Премия Оскар
Представьте, что мы с вами сами можем решать кому и сколько статуэток Оскара уйдет
(Лео бы тогда давно купался в этих статуэтках)

Ваша задача написать программу, которая находит информацию, кто из актеров получил наибольшее и наименьшее
количество статуэток

Входные данные
Программа принимает на вход в первой строке натуральное число n - количество вручаемых сегодня наград. И затем в n
следующих строках вводятся имена актеров - победителей.

Выходные данные
Нужно вывести в отдельных строках имена актеров набравших наибольшее и наименьшее количество статуэток и через запятую
их количество. Гарантируется, что всегда будет только один человек, набравший наибольшее и наименьшее
количество статуэток.

Sample Input:

6
Леонардо Ди Каприо
Джонни Депп
Леонардо Ди Каприо
Леонардо Ди Каприо
Джонни Депп
Мэтт Деймон
Sample Output:

Леонардо Ди Каприо, 3
Мэтт Деймон, 1
"""


from io import StringIO
import sys

# Подготовка данных для проверок
input_data = """6
Леонардо Ди Каприо
Джонни Депп
Леонардо Ди Каприо
Леонардо Ди Каприо
Джонни Депп
Мэтт Деймон
"""

# Перенаправление ввода для тестирования
sys.stdin = StringIO(input_data)

# Запуск кода
actors = {}
for _ in range(int(input())):
    actor = input()
    actors[actor] = actors.get(actor, 0) + 1

sorted_actors = sorted(actors.items(), key=lambda x: (int(x[1]), x[0]), reverse=True)

print(*sorted_actors[0], sep=', ')
print(*sorted_actors[-1], sep=', ')


assert sorted_actors[0] == ('Леонардо Ди Каприо', 3)  # Самый популярный актер
assert sorted_actors[-1] == ('Мэтт Деймон', 1)  # Наименее популярный актер
assert sorted_actors[1] == ('Джонни Депп', 2)  # Второй по популярности актер
assert sorted_actors[2] == ('Мэтт Деймон', 1)  # Третий по популярности актер
assert sorted_actors[0][1] == 3  # Количество появлений самого популярного актера

print('Все проверки пройдены!')
